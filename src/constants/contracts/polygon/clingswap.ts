import { IContractInformation } from '../types'

export const CLINGSWAP_VAULT_INFO: IContractInformation = {
  abi: [
    {
      inputs: [
        { internalType: 'address', name: 'vaultRouter', type: 'address' },
        { internalType: 'address', name: 'lpToken', type: 'address' },
      ],
      stateMutability: 'nonpayable',
      type: 'constructor',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'uint256',
          name: 'pid',
          type: 'uint256',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'amount',
          type: 'uint256',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'depositId',
          type: 'uint256',
        },
      ],
      name: 'DepositToVault',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'uint256',
          name: 'pid',
          type: 'uint256',
        },
        { indexed: true, internalType: 'address', name: 'to', type: 'address' },
      ],
      name: 'EmergencyWithdrawFromVault',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'previousOwner',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'newOwner',
          type: 'address',
        },
      ],
      name: 'OwnershipTransferred',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
      ],
      name: 'Paused',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: 'address',
          name: 'account',
          type: 'address',
        },
      ],
      name: 'Unpaused',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'uint256',
          name: 'pid',
          type: 'uint256',
        },
        { indexed: true, internalType: 'address', name: 'to', type: 'address' },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'amount',
          type: 'uint256',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'depositId',
          type: 'uint256',
        },
      ],
      name: 'WithdrawFromVault',
      type: 'event',
    },
    {
      inputs: [
        { internalType: 'uint256', name: 'pid', type: 'uint256' },
        { internalType: 'uint256', name: 'amount', type: 'uint256' },
        { internalType: 'address', name: 'stakedToken', type: 'address' },
        { internalType: 'address', name: 'lpToken', type: 'address' },
      ],
      name: 'depositToVault',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [{ internalType: 'uint256', name: 'pid', type: 'uint256' }],
      name: 'emergencyWithdrawFromVault',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'getCurrentBlockTimestamp',
      outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'getVaultRouter',
      outputs: [{ internalType: 'address', name: '', type: 'address' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [{ internalType: 'address', name: '', type: 'address' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'pause',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [{ internalType: 'uint256', name: 'pid', type: 'uint256' }],
      name: 'pauseVaultPool',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'paused',
      outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        { internalType: 'uint256', name: 'pid', type: 'uint256' },
        { internalType: 'address', name: 'from', type: 'address' },
        { internalType: 'uint256', name: 'depositId', type: 'uint256' },
      ],
      name: 'preCalculateReward',
      outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        { internalType: 'uint256', name: 'pid', type: 'uint256' },
        { internalType: 'address', name: 'from', type: 'address' },
      ],
      name: 'preCalculateRewardAll',
      outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'unpause',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [{ internalType: 'uint256', name: 'pid', type: 'uint256' }],
      name: 'unpauseVaultPool',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        { internalType: 'uint256', name: 'pid', type: 'uint256' },
        { internalType: 'uint256', name: 'depositId', type: 'uint256' },
        { internalType: 'uint256', name: 'amount', type: 'uint256' },
        { internalType: 'address', name: 'stakedToken', type: 'address' },
        { internalType: 'address', name: 'lpToken', type: 'address' },
      ],
      name: 'withdrawFromVault',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
  ],
  address: {
    dev: null,
    stg: '0x7787Af9b609A5601415cEcEeE2afC44215d905Af',
    prod: '0xF778840105086BA93792f4b266E0ae85e178237a',
  },
}

export const CLINGSWAP_VAULTROUTER_INFO: IContractInformation = {
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'previousOwner',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'newOwner',
          type: 'address',
        },
      ],
      name: 'OwnershipTransferred',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'uint256',
          name: 'poolId',
          type: 'uint256',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'newVaultPool',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'admin',
          type: 'address',
        },
        {
          indexed: false,
          internalType: 'address',
          name: 'stakedToken',
          type: 'address',
        },
        {
          indexed: false,
          internalType: 'address',
          name: 'rewardToken',
          type: 'address',
        },
        {
          indexed: false,
          internalType: 'address',
          name: 'lpToken',
          type: 'address',
        },
      ],
      name: 'VaultPoolDeployed',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'uint256',
          name: 'poolId',
          type: 'uint256',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'lockedDuration',
          type: 'uint256',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'startTimeStamp',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'endTimeStamp',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'rewardPerSecond',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'maxStakedTokenLimitInPool',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'maxStakedTokenPerAccount',
          type: 'uint256',
        },
      ],
      name: 'VaultPoolInitialized',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'uint256',
          name: 'poolId',
          type: 'uint256',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'lockedDuration',
          type: 'uint256',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'startTimeStamp',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'endTimeStamp',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'rewardPerSecond',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'maxStakedTokenLimitInPool',
          type: 'uint256',
        },
        {
          indexed: false,
          internalType: 'uint256',
          name: 'maxStakedTokenPerAccount',
          type: 'uint256',
        },
      ],
      name: 'VaultPoolUpdated',
      type: 'event',
    },
    {
      inputs: [
        { internalType: 'address', name: 'stakedToken', type: 'address' },
        { internalType: 'address', name: 'rewardToken', type: 'address' },
        { internalType: 'address', name: 'lpToken', type: 'address' },
        { internalType: 'address', name: 'admin', type: 'address' },
      ],
      name: 'deployVaultPool',
      outputs: [
        { internalType: 'address', name: 'vaultPool', type: 'address' },
        { internalType: 'uint256', name: 'pid', type: 'uint256' },
      ],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'getAllVaultPool',
      outputs: [{ internalType: 'address[]', name: '', type: 'address[]' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'getAllVaultPoolSize',
      outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'getCurrentBlockTimestamp',
      outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'getNextVaultPoolId',
      outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [{ internalType: 'uint256', name: 'pid', type: 'uint256' }],
      name: 'getVaultPool',
      outputs: [
        { internalType: 'address', name: 'vaultPool', type: 'address' },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [{ internalType: 'uint256', name: 'pid', type: 'uint256' }],
      name: 'getVaultPoolInfo',
      outputs: [
        {
          components: [
            { internalType: 'address', name: 'vaultPool', type: 'address' },
            { internalType: 'address', name: 'stakedToken', type: 'address' },
            { internalType: 'address', name: 'rewardToken', type: 'address' },
            { internalType: 'address', name: 'lpToken', type: 'address' },
            { internalType: 'address', name: 'admin', type: 'address' },
            { internalType: 'uint256', name: 'poolId', type: 'uint256' },
          ],
          internalType: 'struct VaultRouter.VaultPoolInfo',
          name: '',
          type: 'tuple',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [{ internalType: 'uint256', name: 'pid', type: 'uint256' }],
      name: 'getVaultPoolParameter',
      outputs: [
        {
          components: [
            {
              internalType: 'uint256',
              name: 'lockedDuration',
              type: 'uint256',
            },
            {
              internalType: 'uint256',
              name: 'rewardPerSecond',
              type: 'uint256',
            },
            {
              internalType: 'uint256',
              name: 'startTimeStamp',
              type: 'uint256',
            },
            { internalType: 'uint256', name: 'endTimeStamp', type: 'uint256' },
            {
              internalType: 'uint256',
              name: 'maxStakedTokenLimitInPool',
              type: 'uint256',
            },
            {
              internalType: 'uint256',
              name: 'maxStakedTokenPerAccount',
              type: 'uint256',
            },
          ],
          internalType: 'struct VaultRouter.VaultPoolParameter',
          name: '',
          type: 'tuple',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        { internalType: 'uint256', name: 'poolId', type: 'uint256' },
        { internalType: 'uint256', name: 'lockedDuration', type: 'uint256' },
        { internalType: 'uint256', name: 'rewardPerSecond', type: 'uint256' },
        { internalType: 'uint256', name: 'startTimeStamp', type: 'uint256' },
        { internalType: 'uint256', name: 'endTimeStamp', type: 'uint256' },
        {
          internalType: 'uint256',
          name: 'maxStakedTokenLimitInPool',
          type: 'uint256',
        },
        {
          internalType: 'uint256',
          name: 'maxStakedTokenPerAccount',
          type: 'uint256',
        },
      ],
      name: 'initialiseVaultPool',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [{ internalType: 'address', name: '', type: 'address' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'renounceOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
      name: 'transferOwnership',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        { internalType: 'uint256', name: 'poolId', type: 'uint256' },
        { internalType: 'uint256', name: 'lockedDuration', type: 'uint256' },
        { internalType: 'uint256', name: 'rewardPerSecond', type: 'uint256' },
        { internalType: 'uint256', name: 'startTimeStamp', type: 'uint256' },
        { internalType: 'uint256', name: 'endTimeStamp', type: 'uint256' },
        {
          internalType: 'uint256',
          name: 'maxStakedTokenLimitInPool',
          type: 'uint256',
        },
        {
          internalType: 'uint256',
          name: 'maxStakedTokenPerAccount',
          type: 'uint256',
        },
      ],
      name: 'updateVaultPool',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
  ],
  address: {
    dev: null,
    stg: '0x0E538C8AA1fA926B10139B6F1F8F56EF5575A98E',
    prod: '0x983516F005b1F58EAfF0f4Df56A2D866b7403454',
  },
}
